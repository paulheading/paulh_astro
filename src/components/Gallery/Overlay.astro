---
import Loader from "~components/Gallery/Loader.astro";
import Close from "~components/Gallery/Buttons/Close.astro";
import Up from "~components/Gallery/Buttons/Up.astro";
import Prev from "~components/Gallery/Buttons/Prev.astro";
import Next from "~components/Gallery/Buttons/Next.astro";
import Down from "~components/Gallery/Buttons/Down.astro";
import Play from "~components/Gallery/Buttons/Play.astro";
import Mute from "~components/Gallery/Buttons/Mute.astro";
import Info from "~components/Gallery/Buttons/Info.astro";

const overlayProps = {
  "data-state": "closed",
  class: "overlay",
};

const contentProps = {
  "data-state": "not-loaded",
  class: "content",
};

const contextProps = {
  "data-state": "hidden",
  class: "context",
};
---

<div {...overlayProps}>
  <Loader />
  <div {...contentProps}>
    <div class="controls">
      <div class="top">
        <div class="right">
          <Close />
        </div>
      </div>
      <div class="bottom">
        <Prev />
        <Play />
        <Info />
        <Mute />
        <Next />
      </div>
    </div>
    <div {...contextProps}>
      <div class="exit">
        <Close />
      </div>
      <div class="copy"></div>
      <div class="pagination">
        <Up />
        <Down />
      </div>
    </div>
  </div>
</div>

<style lang="scss">
  @import "~styles/mixins";

  $offset_sm: -1rem;
  $offset_lg: -3.25rem;

  @mixin inset {
    bottom: 0;
    right: 0;
    left: 0;
    top: 0;
  }

  .overlay {
    $padding: 2rem;

    @include inset;
    background-color: black;
    justify-content: center;
    align-items: center;
    visibility: visible;
    padding: $padding;
    position: fixed;
    display: flex;
    z-index: 3;

    @include small-down {
      padding-bottom: $padding * 2;
      padding-top: $padding * 2;
    }

    &[data-state="closed"] {
      display: none;
    }
  }

  .content {
    $size: 64rem;

    justify-content: center;
    align-items: center;
    position: relative;
    max-height: $size;
    max-width: $size;
    min-width: 10rem;
    display: flex;
    height: 100%;

    &[data-state="not-loaded"] {
      opacity: 0;
    }
  }

  .video {
    border: 1px solid white;
    max-height: 100%;
    max-width: 100%;
    display: block;

    &[data-ratio="portrait"] {
      width: auto;
      height: 100%;
    }

    &[data-ratio="landscape"] {
      width: 100%;
      height: auto;
    }
  }

  .controls {
    @include inset;
    position: absolute;
    min-width: 10rem;
    margin: auto;
    z-index: 1;

    @include small-up {
      z-index: 3;
    }
  }

  .bottom {
    @include absolute-control-row;
    bottom: $offset_lg;

    @include small-up {
      bottom: $offset_sm;
    }
  }

  .top {
    @include absolute-control-row;
    top: $offset_lg;

    @include small-up {
      top: $offset_sm;
    }
  }

  .right {
    @include small-up {
      position: absolute;
      right: 0;
    }
  }

  .right.adjust {
    @include small-up {
      right: -1rem;
    }
  }

  .context {
    font-weight: $font-weight-normal;
    text-align: center;
    position: relative;
    color: white;
  }

  .context[data-state="hidden"] {
    display: none;
  }

  .copy {
    padding: toRem(21);
    border: 1px solid;

    @include small-down {
      font-size: 1rem;
    }
  }

  $margin-button: -17;

  .exit {
    @include control-row;
    margin-bottom: toRem($margin-button);
  }

  .pagination {
    @include control-row;
    margin-top: toRem($margin-button);
  }
</style>
