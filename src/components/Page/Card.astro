---
import { DateTime } from "luxon";
import { calc } from "~scripts/helpers";

import Labels from "~components/Labels.astro";
import Label from "~components/Label.astro";
import Name from "~components/Page/Card/Name.astro";
import Summary from "~components/Page/Card/Summary.astro";

let { card, index } = Astro.props;
let { name, labels, dueComplete, local, start, due } = card;
let primary = labels.filter(({ color }) => color)[0].color;

const containerProps = {
  class: "container",
};

if (index >= 3) containerProps.style = { display: "none" };

start = DateTime.fromISO(start);

due = DateTime.fromISO(due);

const length = calc.summary_length(dueComplete, due, start);

let nameProps = {
  href: local.url,
  name,
};

let summaryProps = {
  content: local.summary,
};
---

<script src="~scripts/components/page/card.js"></script>

<div {...containerProps}>
  <div class="label_wrap">
    <Labels>
      {
        labels.map(function ({ name, color }) {
          const style = color ? "solid" : "outline";

          color = color ? color : primary;

          const props = {
            color,
            style,
          };

          return <Label {...props}>{name}</Label>;
        })
      }
      <Label color={primary} style="outline">
        {length}
      </Label>
    </Labels>
  </div>
  <Name {...nameProps} />
  <div class="due">
    {dueComplete ? due.toFormat("MMM yyyy") : "Ongoing"}
  </div>
  <Summary {...summaryProps} />
</div>

<style lang="scss">
  @import "~styles/mixins";

  .container {
    @include medium-down {
      padding: ($padding-row * 1.5) $padding-row;
      border-top: $border-dashed;
    }
  }

  .label_wrap {
    margin-bottom: 0.75rem;
  }

  .due {
    font-size: $font-size-summary;
    margin-bottom: 0.5rem;
    font-style: italic;
    color: $c-gray-7;
  }
</style>
