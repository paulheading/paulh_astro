---
import { Labels, Label } from "paully";

import CardName from "~Page/Card/Name";
import CardStatus from "~Page/Card/Status";
import CardSummary from "~Page/Card/Summary";

import type { card } from "~types/page/card";

interface Props {
  card: card;
  hidden: boolean;
}

interface pageCardProps {
  "data-hidden": boolean;
  "data-type": string;
  "data-id": string;
  class: string;
}

let { card, hidden = false } = Astro.props;

let { name, local, type } = card;

let { projectDetails, labels } = local;

const pageCardProps: pageCardProps = {
  "data-hidden": hidden,
  "data-type": type,
  "data-id": card.id,
  class: "page-card",
};

let nameProps = {
  href: local.url,
  name,
};

let summaryProps = {
  content: local.summary,
};
---

<div {...pageCardProps}>
  <div class="label_wrap">
    <Labels>
      {
        labels.map(function (label) {
          let { name, style, color } = label;

          let props = {
            style,
            color,
          };

          return <Label {...props}>{name}</Label>;
        })
      }
    </Labels>
  </div>
  <CardName {...nameProps} />
  {projectDetails.status && <CardStatus status={projectDetails.status} />}
  <CardSummary {...summaryProps} />
</div>

<style lang="scss">
  @use "~mixins" as *;

  .page-card {
    overflow: hidden;

    @include medium-down {
      padding: toRem(24) toRem(24) toRem(12);
    }
  }

  .page-card[data-hidden="true"] {
    display: none;
  }

  .page-card:not([data-hidden="true"]) + .page-card {
    @include medium-down {
      border-top: $border-dashed;
    }
  }

  .label_wrap {
    margin-bottom: 0.75rem;
  }
</style>
