---
import { DateTime } from "luxon";

import Labels from "~components/Labels.astro";
import Label from "~components/Label.astro";
import { calc } from "~scripts/helpers";
import { parse } from "node-html-parser";

let { card, index } = Astro.props;
let { name, labels, dueComplete, local, start, due } = card;
let primary = labels.filter(({ color }) => color)[0].color;

const containerProps = {
  class: "container",
};

if (index >= 3) containerProps.style = { display: "none" };

start = DateTime.fromISO(start);

due = DateTime.fromISO(due);

const length = calc.summary_length(dueComplete, due, start);

const nameProps = {
  href: local.url,
  class: "name",
};

function processSummary(content) {
  let max = 15;

  let words = content.split(" ");

  let short = words.filter((word, index) => index <= max);

  let extra = words.filter((word, index) => index > max);

  let button = "<button class='readmore'>more</button>";

  short = short.join(" ");

  short = "<span class='short'>" + short + "</span>";

  let result = short;

  if (extra.length) {
    extra = extra.join(" ");

    extra = "<span class='extra' style='display:none;'>" + extra + "</span>";

    result += " " + extra;

    result += " " + button;
  }

  return parse(result);
}

const summary = processSummary(local.summary);
---

<script src="~scripts/components/page/card.js"></script>

<div {...containerProps}>
  <div class="label_wrap">
    <Labels>
      {
        labels.map(function ({ name, color }) {
          const style = color ? "solid" : "outline";

          color = color ? color : primary;

          const props = {
            color,
            style,
          };

          return <Label {...props}>{name}</Label>;
        })
      }
      <Label color={primary} style="outline">
        {length}
      </Label>
    </Labels>
  </div>
  <a {...nameProps}>{name}</a>
  <div class="due">
    {dueComplete ? due.toFormat("MMM yyyy") : "Ongoing"}
  </div>
  <div class="summary">
    {summary}
  </div>
</div>

<style lang="scss">
  @import "~styles/mixins";

  .container {
    @include medium-down {
      padding: ($padding-row * 1.5) $padding-row;
      border-top: $border-dashed;
    }
  }

  .label_wrap {
    margin-bottom: 0.75rem;
  }

  .due {
    font-size: $font-size-summary;
    margin-bottom: 0.5rem;
    font-style: italic;
    color: $c-gray-7;
  }

  .summary {
    font-size: $font-size-summary;
    color: $c-gray-7;
  }

  .name {
    font-size: $h4-font-size;
  }
</style>

<style lang="scss" is:global>
  @import "~styles/mixins";

  .summary .readmore {
    padding: toRem(3) toRem(6) toRem(5) toRem(6);
    border-radius: $border-radius-sm;
    border: 1px solid currentColor;
    font-size: $h6-font-size;
    background-color: white;
    font-weight: bold;
    color: inherit;
    line-height: 1;

    @include focus {
      background-color: $c-gray-7;
      color: white;
    }
  }
</style>
