---
import { DateTime } from "luxon";
import { calc } from "~scripts/helpers";

import Labels from "~components/Labels.astro";
import Label from "~components/Label.astro";
import Name from "~components/Page/Card/Name.astro";
import Summary from "~components/Page/Card/Summary.astro";

import type { card } from "~types/page/card";

interface Props {
  card: card;
  index: number;
  countTime: boolean;
}

let { card, index, countTime = false } = Astro.props;

let { name, labels, dueComplete, local, start, due, type, dateLastActivity } =
  card;

const containerProps = {
  "data-article": "true",
  "data-id": card.id,
  class: "container",
  style: {},
};

if (index >= 3) containerProps.style = { display: "none" };

let nameProps = {
  href: local.url,
  name,
};

let summaryProps = {
  content: local.summary,
};

let lengthSettings = {
  dueComplete,
  due: DateTime.fromISO(due),
  start: DateTime.fromISO(start),
};

let length = countTime ? calc.summary_length(lengthSettings) : null;

function processDue() {
  let isArticle = type == "article";

  let date = DateTime.fromISO(isArticle ? dateLastActivity : due);

  date = date.toFormat("MMM yyyy");

  if (isArticle) return date;

  return dueComplete ? date : "Ongoing";
}
---

<div {...containerProps}>
  <div class="label_wrap">
    <Labels>
      {
        labels.map(function ({ name, color }, index) {
          const props = {
            style: "solid",
            color,
          };

          if (index > 0) {
            props.style = "outline";
            props.color = local.primaryColor;
          }

          return <Label {...props}>{name}</Label>;
        })
      }
      {
        countTime && (
          <Label color={local.primaryColor} style="outline">
            {length}
          </Label>
        )
      }
    </Labels>
  </div>
  <Name {...nameProps} />
  <div class="due">
    {processDue}
  </div>
  <Summary {...summaryProps} />
</div>

<style lang="scss">
  @import "~styles/mixins";

  .container {
    overflow: hidden;

    @include medium-down {
      padding: ($padding-row * 1.25) $padding-row ($padding-row * 0.75);
    }
  }

  .container:not([style*="display:none;"]) + .container {
    @include medium-down {
      border-top: $border-dashed;
    }
  }

  .label_wrap {
    margin-bottom: 0.75rem;
  }

  .due {
    font-size: $font-size-summary;
    margin-bottom: 0.5rem;
    font-style: italic;
    color: $c-gray-7;
  }
</style>
