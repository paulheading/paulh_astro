---
import { parse } from "node-html-parser";
import remove_markdown from "remove-markdown";

import Layout from "~layouts/Main.astro";

import PageOuter from "~components/Page/Outer.astro";
import PageInner from "~components/Page/Inner.astro";
import PageRow from "~components/Page/Row.astro";
import PageCard from "~components/Page/Card.astro";

import { OutlineLink, data } from "paully";

import Summary from "~markdown/summary.md";

import description from "~markdown/summary.md?raw";

import details from "~data/personal.js";
import { create } from "~scripts/helpers";
import { projects } from "~data/layout.json";
import { roles, learning } from "~data/resume.json";

let { seo } = data;

const layoutProps = {
  title: seo.title("Resume"),
  description: remove_markdown(description),
};

const paul = new create.person(details);

const defaultProps = { content: { columns: 3 } };

const projectProps = {
  ...defaultProps,
  title: "Projects",
  controls: true,
};

const rolesProps = {
  ...defaultProps,
  title: "Roles",
  controls: false,
};

const learningProps = {
  ...defaultProps,
  title: "Learning",
  controls: true,
};

const saveProps = {
  href: "/paul-heading-resume-front-end-designer-developer.pdf",
  justify: "flex-start",
  size: 14,
};
---

<script src="~scripts/pages/resume.js"></script>

<Layout {...layoutProps}>
  <PageOuter>
    <PageInner>
      <PageRow content={{ padding: true, columns: 2 }}>
        <div>
          <div class="name">{paul.name}</div>
          <OutlineLink {...saveProps}>Save as PDF</OutlineLink>
        </div>
        <div>
          <div class="location">{paul.location}</div>
          <div class="email">{parse(paul.email.link)}</div>
          <div class="dateCompiled">{projects.data.dateCompiled}</div>
        </div>
      </PageRow>
      <PageRow content={{ padding: true, columns: 2 }}>
        <div>
          <div class="title biography">Summary</div>
          <div class="copy biography">
            <Summary />
          </div>
        </div>
        <div class="platforms">
          {paul.platforms.map(({ link }) => <div>{parse(link)}</div>)}
        </div>
      </PageRow>
      <PageRow {...projectProps}>
        {
          projects.cards.map(function (card, index) {
            let props = { card, hidden: index > 3 };
            return <PageCard {...props} />;
          })
        }
      </PageRow>
      <PageRow {...rolesProps}>
        {roles.cards.map((card) => <PageCard card={card} />)}
      </PageRow>
      <PageRow {...learningProps}>
        {
          learning.cards.map(function (card, index) {
            let props = { card, hidden: index > 3 };
            return <PageCard {...props} />;
          })
        }
      </PageRow>
    </PageInner>
  </PageOuter>
</Layout>

<style lang="scss">
  @import "~styles/mixins";

  $margin-compiled: toRem(10);

  @mixin title-bump {
    margin-bottom: $margin-compiled;
    line-height: $line-height-sm;
  }

  .name {
    @include title-bump;
    font-size: $h2-font-size;

    @include small-up {
      font-size: $h1-font-size;
    }
  }

  .title {
    @include title-bump;
    font-size: $h3-font-size;
  }

  .dateCompiled {
    font-weight: $font-weight-normal;
    font-size: $font-size-caption;
    margin-top: $margin-compiled;
  }
</style>
