---
import { parse } from "node-html-parser";
import remove_markdown from "remove-markdown";

import Layout from "~layouts/Main.astro";

import PageOuter from "~components/Page/Outer.astro";
import PageInner from "~components/Page/Inner.astro";
import PageRow from "~components/Page/Row.astro";
import PageCard from "~components/Page/Card.astro";

import Biography from "~markdown/biography.md";

import description from "~markdown/biography.md?raw";

import seo from "~data/seo.js";
import details from "~data/personal.js";
import { create } from "~scripts/helpers";
import { projects } from "~data/layout.json";
import { roles, learning } from "~data/resume.json";

const layoutProps = {
  title: seo.title("Resume"),
  description: remove_markdown(description),
};

const paul = new create.person(details);

const defaultProps = { controls: true, content: { columns: 3 } };

const projectProps = {
  title: "Projects",
  ...defaultProps,
};

const rolesProps = {
  title: "Roles",
  ...defaultProps,
};

const learningProps = {
  title: "Learning",
  ...defaultProps,
};
---

<script src="~scripts/pages/resume.js"></script>

<Layout {...layoutProps}>
  <PageOuter>
    <PageInner>
      <PageRow content={{ padding: true, columns: 2 }}>
        <div class="name">{paul.name}</div>
        <div>
          <div>{paul.location}</div>
          <div>{parse(paul.email.link)}</div>
        </div>
      </PageRow>
      <PageRow content={{ padding: true, columns: 2 }}>
        <div>
          <div class="title">Biography</div>
          <div class="copy">
            <Biography />
          </div>
        </div>
        <div>{paul.platforms.map(({ link }) => <div>{parse(link)}</div>)}</div>
      </PageRow>
      <PageRow {...projectProps}>
        {
          projects.map(function (card, index) {
            let props = { card, index, countTime: true };
            return <PageCard {...props} />;
          })
        }
      </PageRow>
      <PageRow {...rolesProps}>
        {
          roles.map(function (card, index) {
            let props = { card, index, countTime: true };
            return <PageCard {...props} />;
          })
        }
      </PageRow>
      <PageRow {...learningProps}>
        {
          learning.map(function (card, index) {
            let props = { card, index, countTime: true };
            return <PageCard {...props} />;
          })
        }
      </PageRow>
    </PageInner>
  </PageOuter>
</Layout>

<style lang="scss">
  @import "~styles/mixins";

  @mixin mobile-bump {
    @include medium-down {
      margin-bottom: $padding-row * 0.5;
    }
  }

  .name {
    @include mobile-bump;
    font-size: $h2-font-size;

    @include small-up {
      font-size: $h1-font-size;
    }

    @include medium-down {
      line-height: 1.3;
    }
  }

  .title {
    margin-bottom: $padding-row * 0.5;
    font-size: $h3-font-size;
  }

  .copy {
    @include mobile-bump;
    font-weight: normal;
  }
</style>
